import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import yfinance as yf

NUM_OF_SIMULATIONS = 100000

def download_data(stock, start_date, end_date):
    data = yf.download(stock, start=start_date, end=end_date)
    return data['Adj Close']

def stock_monte_carlo(S0, mu, sigma, N=252):
    result = []

    for _ in range(NUM_OF_SIMULATIONS):
        prices = [S0]
        for _ in range(N):
            stock_price = prices[-1] * np.exp((mu - 0.5 * sigma ** 2) +
                                              sigma * np.random.normal())
            prices.append(stock_price)

        result.append(prices)

    simulation_data = pd.DataFrame(result).T
    simulation_data['mean'] = simulation_data.mean(axis=1)

    plt.plot(simulation_data['mean'])
    plt.title('Monte Carlo Simulation for Stock Price Prediction')
    plt.xlabel('Days')
    plt.ylabel('Stock Price')
    plt.show()

    print('Prediction for future stock price: $%.2f' % simulation_data['mean'].tail(1).values[0])

if __name__ == '__main__':
    ticker = 'AAPL'  # Change this to any other stock ticker if needed
    start_date = '2020-01-01'
    end_date = '2023-07-08'
    
    data = download_data(ticker, start_date, end_date)
    returns = data.pct_change().dropna()
    mu = returns.mean()
    sigma = returns.std()

    stock_monte_carlo(data[-1], mu, sigma)  # Using the last available stock price as S0
